// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Role {
  user
  admin
  investor
  staker
}

model User {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  name    String
  email   String   @unique
  password String
  img     String? @default("https://i.imgur.com/HeIi0wU.png")
  role    Role     @default(user)
  contactNo String
  address String?
  wallet  Int @default(0)
  deposit Int @default(0)
  withdraw Int @default(0)
  stake Int @default(0)
  stakeReward Int @default(0)

  userStakes UserStake[]
  userStakeRewards UserStakeReward[]
  userDeposits UserDeposit[]
  userWithdraws UserWithdraw[]
  userWallets UserWallet[]
  refferals Refferal[]
  refferalIncomes RefferalIncome[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model UserWallet {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  userId  String
  balance Float @default(0)
  deposit Float @default(0)
  withdraw Float @default(0)
  stake Float @default(0)
  stakeReward Float @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [id], references: [id])

  @@map("userWallets")
}

model UserDeposit {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  userId  String
  amount Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [id], references: [id])

  @@map("userDeposits")
}

model UserWithdraw {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  userId  String
  amount Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [id], references: [id])

  @@map("userWithdraws")
}

model UserStake {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  amount Float
  userId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [id], references: [id])

  @@map("userStakes")
}

model UserStakeReward {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  userId  String
  amount Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [id], references: [id])

  @@map("userStakeRewards")
}

model Refferal {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  userId  String
  refferalId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [id], references: [id])

  @@map("refferals")
}

model RefferalIncome {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  userId  String
  amount Int @default(10)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [id], references: [id])

  @@map("refferalIncomes")
}