// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  user
  admin
  investor
  staker
}

model User {
  id              String           @id @default(uuid())
  name            String
  email           String           @unique
  password        String
  img             String?          @default("https://i.imgur.com/HeIi0wU.png")
  role            Role             @default(user)
  contactNo       String
  address         String?
  wallet          Int              @default(0)
  deposit         Int              @default(0)
  withdraw        Int              @default(0)
  stake           Int              @default(0)
  stakeReward     Int              @default(0)
  stakes          Stake[]
  stakeRewards    StakeReward[]
  deposits        Deposit[]
  withdraws       Withdraw[]
  wallets         Wallet[]
  referrals       Referral[]
  referralIncomes ReferralIncome[]
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt

  @@map("users")
}

model Wallet {
  id          String   @id @default(uuid())
  userId      String
  balance     Float    @default(0)
  deposit     Float    @default(0)
  withdraw    Float    @default(0)
  stake       Float    @default(0)
  stakeReward Float    @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [id], references: [id])

  @@map("wallets")
}

model Deposit {
  id        String   @id @default(uuid())
  userId    String
  amount    Int      @default(200)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [id], references: [id])

  @@map("deposits")
}

model Withdraw {
  id        String   @id @default(uuid())
  userId    String
  amount    Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [id], references: [id])

  @@map("withdraws")
}

model Stake {
  id        String   @id @default(uuid())
  amount    Float
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [id], references: [id])

  @@map("stakes")
}

model StakeReward {
  id        String   @id @default(uuid())
  userId    String
  amount    Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [id], references: [id])

  @@map("stakeRewards")
}

model Referral {
  id              String   @id @default(uuid())
  userId          String
  referredBy      String
  referralDeposit Int
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  user            User     @relation(fields: [id], references: [id])

  @@map("referrals")
}

model ReferralIncome {
  id        String   @id @default(uuid())
  userId    String
  amount    Int      @default(10)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [id], references: [id])

  @@map("referralIncomes")
}
